# This file belongs to the project https://code.shin.company/php
# Author:  Shin <shin@shin.company>
# License: https://code.shin.company/php/blob/main/LICENSE
################################################################################

name: Publish deprecated images (before v5.x)

################################################################################
################################################################################

on: workflow_dispatch

################################################################################
################################################################################

jobs:

  ##############################################################################
  # Base PHP-CLI & PHP-FPM
  ##############################################################################

  php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4
      -
        id: config
        run: |
          ./.bin/prebuild src/php/cli
          ./.bin/prebuild src/php/fpm
          echo "BUILD_CONTEXT_CLI=src/php/cli" >> $GITHUB_ENV
          echo "BUILD_CONTEXT_FPM=src/php/fpm" >> $GITHUB_ENV
          echo "BUILD_NAME=shinsenter/php" >> $GITHUB_ENV
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ env.CHECKSUM }}-${{ env.BUILD_REVISION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-cli
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BUILD_NAME }}
          tags: |
            type=raw,value=cli${{ env.SUFFIX }},enable=${{ matrix.version == env.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-cli${{ env.SUFFIX }}
            type=raw,value=${{ matrix.version }}${{ env.SUFFIX }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-fpm
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BUILD_NAME }}
          tags: |
            type=raw,value=fpm${{ env.SUFFIX }},enable=${{ matrix.version == env.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-fpm${{ env.SUFFIX }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ env.BUILD_NAME }}:${{ matrix.version }}-cli
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT_CLI }}
          platforms: ${{ env.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ env.BUILD_CONTEXT_CLI }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_DESC=${{ env.BUILD_DESC }}
            BUILD_NAME=${{ env.BUILD_NAME }}
            BUILD_REVISION=${{ env.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta-cli.outputs.tags }}
          sbom: true
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ env.BUILD_NAME }}:${{ matrix.version }}-fpm
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT_FPM }}
          platforms: ${{ env.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ env.BUILD_CONTEXT_FPM }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_DESC=${{ env.BUILD_DESC }}
            BUILD_NAME=${{ env.BUILD_NAME }}
            BUILD_REVISION=${{ env.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta-fpm.outputs.tags }}
          sbom: true

  ##############################################################################
  # Base PHP Web Servers (Apache or Nginx)
  ##############################################################################

  php-servers:
    needs: php
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        variation:
          - fpm-apache
          - fpm-nginx
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4
      -
        id: config
        run: |
          ./.bin/prebuild src/servers/${{ matrix.variation }}
          echo "BUILD_CONTEXT=src/servers/${{ matrix.variation }}" >> $GITHUB_ENV
          echo "BUILD_NAME=shinsenter/php${{ matrix.variation }}" >> $GITHUB_ENV
          echo "BUILD_VERSION=php${{ matrix.version }}" >> $GITHUB_ENV
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ matrix.variation }}-${{ env.CHECKSUM }}-${{ env.BUILD_REVISION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-php
        uses: docker/metadata-action@v5
        with:
          images: shinsenter/php
          tags: |
            type=raw,value=${{ matrix.variation }}${{ env.SUFFIX }},enable=${{ matrix.version == env.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-${{ matrix.variation }}${{ env.SUFFIX }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BUILD_NAME }}
          tags: |
            type=raw,value=${{ env.BUILD_VERSION }}${{ env.SUFFIX }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT }}
          platforms: ${{ env.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ env.BUILD_CONTEXT }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_DESC=${{ env.BUILD_DESC }}
            BUILD_NAME=${{ env.BUILD_NAME }}
            BUILD_REVISION=${{ env.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.meta-php.outputs.tags }}
            ${{ steps.meta-server.outputs.tags }}
          sbom: true
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: minify
        run: |
          tidy="${{ env.BUILD_CONTEXT }}/Dockerfile.tidy"
          name="${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}"
          docker pull $name${{ env.SUFFIX }} && touch $tidy && ./.bin/tidy-docker $tidy $name${{ env.SUFFIX }} "${name}-tidy${{ env.SUFFIX }}"
          if [ -f $tidy ]; then
            echo "Dockerfile is created at $tidy"
            echo "BUILD_TIDY_FILE=${tidy}" >> $GITHUB_OUTPUT
            echo "BUILD_TIDY_NAME=${name}-tidy${{ env.SUFFIX }}" >> $GITHUB_OUTPUT
          fi
      -
        if: steps.cache.outputs.cache-hit != 'true' && steps.minify.outputs.BUILD_TIDY_FILE != ''
        name: Minify ${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ steps.minify.outputs.BUILD_TIDY_FILE }}
          tags: ${{ steps.minify.outputs.BUILD_TIDY_NAME }}
          platforms: ${{ env.BUILD_PLATFORM }}
          sbom: true

  ##############################################################################
  # PHP-Based Popular Web Applications
  ##############################################################################

  php-webapps:
    needs: php-servers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
        app:
          - cakephp4
          - codeigniter4
          - crater
          - flarum
          - fuelphp
          - grav
          - hyperf
          - kirby
          - laminas
          - laravel
          - mautic
          - phpmyadmin
          - slim
          - statamic
          - symfony
          - wordpress
          - yii
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4
      -
        id: config
        run: |
          ./.bin/prebuild src/webapps/${{ matrix.app }}
          echo "BUILD_CONTEXT=src/webapps/${{ matrix.app }}" >> $GITHUB_ENV
          echo "BUILD_NAME=shinsenter/${{ matrix.app }}" >> $GITHUB_ENV
          echo "BUILD_VERSION=php${{ matrix.version }}" >> $GITHUB_ENV
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ matrix.app }}-${{ env.CHECKSUM }}-${{ env.BUILD_REVISION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BUILD_NAME }}
          tags: |
            type=raw,value=${{ env.BUILD_VERSION }}${{ env.SUFFIX }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT }}
          platforms: ${{ env.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ env.BUILD_CONTEXT }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_DESC=${{ env.BUILD_DESC }}
            BUILD_NAME=${{ env.BUILD_NAME }}
            BUILD_REVISION=${{ env.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: minify
        run: |
          tidy="${{ env.BUILD_CONTEXT }}/Dockerfile.tidy"
          name="${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}"
          docker pull $name${{ env.SUFFIX }} && touch $tidy && ./.bin/tidy-docker $tidy $name${{ env.SUFFIX }} "${name}-tidy${{ env.SUFFIX }}"
          if [ -f $tidy ]; then
            echo "Dockerfile is created at $tidy"
            echo "BUILD_TIDY_FILE=${tidy}" >> $GITHUB_OUTPUT
            echo "BUILD_TIDY_NAME=${name}-tidy${{ env.SUFFIX }}" >> $GITHUB_OUTPUT
          fi
      -
        if: steps.cache.outputs.cache-hit != 'true' && steps.minify.outputs.BUILD_TIDY_FILE != ''
        name: Minify ${{ env.BUILD_NAME }}:${{ env.BUILD_VERSION }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ steps.minify.outputs.BUILD_TIDY_FILE }}
          tags: ${{ steps.minify.outputs.BUILD_TIDY_NAME }}
          platforms: ${{ env.BUILD_PLATFORM }}
          sbom: true

################################################################################
################################################################################
