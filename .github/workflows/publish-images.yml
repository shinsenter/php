name: Publish Images (shinsenter/php)

################################################################################
################################################################################

on:
  # pull_request:
  #   types:
  #     - opened
  #     - reopened
  #   branches:
  #     - main
  #   paths:
  #     - '.github/workflows/publish-images.yml'
  #     - 'src/**'
  push:
    branches:
      - main
    paths:
      - 'checksum.sh'
      - '.github/workflows/publish-images.yml'
      - 'src/**'
  schedule:
    - cron: "0 0 * * 0,3"

################################################################################
################################################################################

jobs:
  ##############################################################################
  # S6 Overlay build stage
  ##############################################################################

  s6-overlay:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        image:
          - shinsenter/s6-overlay
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      -
        id: config
        run: |
          ./.git-config/hooks/pre-commit
          ./.git-config/hooks/pre-build src/base-s6
          echo "::set-output name=BUILD_NAME::${{ matrix.image }}"
          echo "::set-output name=BUILD_VERSION::$(cat ./S6_VERSION.txt)"
          echo "::set-output name=S6_VERSION::$(cat ./S6_VERSION.txt)"
      -
        uses: actions/cache@v2
        with:
          path: /tmp/buildx
          key: ${{ runner.os }}-buildx-${{ steps.config.outputs.S6_VERSION }}
          restore-keys: "${{ runner.os }}-buildx-"
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx,mode=max
          context: ./src/base-s6/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            S6_VERSION=${{ steps.config.outputs.S6_VERSION }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.S6_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:latest
      -
        name: Updating ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./src/base-s6/README.md

  ##############################################################################
  # Base Ubuntu with S6 Overlay
  ##############################################################################

  base:
    needs: s6-overlay
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        base:
          - ubuntu
        version:
          - 20.04
          - focal
        image:
          - shinsenter/s6-ubuntu
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      -
        id: config
        run: |
          ./.git-config/hooks/pre-commit
          ./.git-config/hooks/pre-build src/base-ubuntu
          cat versions/base.txt
          echo "::set-output name=BUILD_NAME::${{ matrix.image }}"
          echo "::set-output name=BUILD_VERSION::${{ matrix.version }}-s6-$(cat ./S6_VERSION.txt)"
          echo "::set-output name=S6_VERSION::$(cat ./S6_VERSION.txt)"
      -
        uses: actions/cache@v2
        with:
          path: /tmp/buildx
          key: "${{ runner.os }}-buildx-\
            ${{ hashFiles('versions/base.txt') }}"
          restore-keys: "${{ runner.os }}-buildx-"
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx-new,mode=max
          context: ./src/base-ubuntu/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            BASE_IMAGE=${{ matrix.base }}:${{ matrix.version }}
            S6_VERSION=${{ steps.config.outputs.S6_VERSION }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:${{ matrix.version }}
            ${{ steps.config.outputs.BUILD_NAME }}:s6-${{ steps.config.outputs.S6_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:latest
      -
        name: Updating ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./src/base-ubuntu/README.md
      -
        run: |
          rm -rf /tmp/buildx
          mv /tmp/buildx-new /tmp/buildx

  ##############################################################################
  # Base PHP-CLI & PHP-FPM
  ##############################################################################

  php:
    needs: base
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        image:
          - shinsenter/php
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      -
        id: config
        run: |
          ./.git-config/hooks/pre-commit
          ./.git-config/hooks/pre-build src/php/fpm
          cat versions/fpm.txt
          echo "::set-output name=BUILD_NAME::${{ matrix.image }}"
          echo "::set-output name=BUILD_VERSION::${{ matrix.version }}"
      -
        uses: actions/cache@v2
        with:
          path: /tmp/buildx
          key: "${{ runner.os }}-buildx-php-${{ matrix.version }}-\
            ${{ hashFiles('versions/cli.txt') }}"
          restore-keys: "${{ runner.os }}-buildx-"
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}-cli
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx,mode=max
          context: ./src/php/cli/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}-cli
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            BASE_IMAGE=shinsenter/s6-ubuntu:latest
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:cli
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}-cli
            ${{ steps.config.outputs.BUILD_NAME }}:latest
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}-fpm
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx-new,mode=max
          context: ./src/php/fpm/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}-fpm
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:fpm
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}-fpm
      -
        run: |
          rm -rf /tmp/buildx
          mv /tmp/buildx-new /tmp/buildx

  ##############################################################################
  # Update README.md
  ##############################################################################

  readme:
    needs: php
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        image:
          - shinsenter/php
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          echo -e "\n\n$(cat ./SPONSOR.md)" >>./README.md
          echo "::set-output name=BUILD_DESC::$(sed '3q;d' ./README.md)"
      -
        name: Updating ${{ matrix.image }}/README.md
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ matrix.image }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./README.md

  ##############################################################################
  # Base PHP Web Servers (Apache or Nginx)
  ##############################################################################

  php-servers:
    needs: php
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        variation:
          - fpm-apache
          - fpm-nginx
        image:
          - shinsenter/php
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      -
        id: config
        run: |
          ./.git-config/hooks/pre-commit
          ./.git-config/hooks/pre-build src/servers/${{ matrix.variation }}
          cat versions/servers.txt
          echo "::set-output name=BUILD_NAME::shinsenter/php${{ matrix.variation }}"
          echo "::set-output name=BUILD_VERSION::php${{ matrix.version }}"
      -
        uses: actions/cache@v2
        with:
          path: /tmp/buildx
          key: "${{ runner.os }}-buildx-php-${{ matrix.version }}-${{ matrix.variation }}-\
            ${{ hashFiles('versions/servers.txt') }}"
          restore-keys: "${{ runner.os }}-buildx-php-${{ matrix.version }}-"
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx-new,mode=max
          context: ./src/servers/${{ matrix.variation }}/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            BASE_IMAGE=${{ matrix.image }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:latest
            ${{ matrix.image }}:${{ matrix.version }}-${{ matrix.variation }}
            ${{ matrix.image }}:${{ matrix.variation }}
      -
        name: Updating ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./src/servers/${{ matrix.variation }}/README.md
      -
        run: |
          rm -rf /tmp/buildx
          mv /tmp/buildx-new /tmp/buildx

  ##############################################################################
  # PHP-Based Popular Web Applications
  ##############################################################################

  php-webapps:
    needs: php-servers
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      matrix:
        version:
          - "7.4"
          - "8.0"
          - "8.1"
        app:
          - wordpress
          - phpmyadmin
          - laravel
          - codeigniter4
          - symfony
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      -
        id: config
        run: |
          ./.git-config/hooks/pre-commit
          ./.git-config/hooks/pre-build src/webapps/${{ matrix.app }}
          cat versions/webapps.txt
          echo "::set-output name=BUILD_NAME::shinsenter/${{ matrix.app }}"
          echo "::set-output name=BUILD_VERSION::php${{ matrix.version }}"
      -
        uses: actions/cache@v2
        with:
          path: /tmp/buildx
          key: "${{ runner.os }}-buildx-php-${{ matrix.version }}-${{ matrix.app }}-\
            ${{ hashFiles('versions/webapps.txt') }}"
          restore-keys: "${{ runner.os }}-buildx-php-${{ matrix.version }}-"
      -
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Building ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/buildx
          cache-to: type=local,dest=/tmp/buildx-new,mode=max
          context: ./src/webapps/${{ matrix.app }}/
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          build-args: |
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_VERSION=${{ steps.config.outputs.BUILD_VERSION }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            VCS_REF=${{ steps.config.outputs.VCS_REF }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
            ${{ steps.config.outputs.BUILD_NAME }}:latest
      -
        name: Updating ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./src/webapps/${{ matrix.app }}/README.md
      -
        run: |
          rm -rf /tmp/buildx
          mv /tmp/buildx-new /tmp/buildx

################################################################################
################################################################################
