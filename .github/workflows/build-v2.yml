# This file belongs to the project https://code.shin.company/php
# Author:  Shin <shin@shin.company>
# License: https://code.shin.company/php/blob/main/LICENSE
################################################################################

name: Publish shinsenter/php (v2.x)

################################################################################
################################################################################

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-v2.yml
      - PHP_VERSIONS
      - S6_VERSION
      - src/**
  pull_request:
    types:
      - opened
      - reopened
    branches:
      - main
    paths:
      - .github/workflows/build-v2.yml
      - PHP_VERSIONS
      - S6_VERSION
      - src/**
  schedule:
    - cron: "0 0 * * *"

################################################################################
################################################################################

jobs:
  ##############################################################################
  # Scratch images
  ##############################################################################

  scratch:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/base nometa
          echo "::set-output name=BUILD_CONTEXT::src/base"
          echo "::set-output name=BUILD_NAME::shinsenter/scratch"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          platforms: |
            linux/386
            linux/amd64
            linux/amd64/v2
            linux/amd64/v3
            linux/amd64/v4
            linux/arm/v6
            linux/arm/v7
            linux/arm64/v8
            linux/mips64
            linux/mips64le
            linux/ppc64le
            linux/riscv64
            linux/s390x
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
          tags: ${{ steps.config.outputs.BUILD_NAME }}:latest
      -
        name: Update ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ${{ steps.config.outputs.BUILD_CONTEXT }}/README.md

  ##############################################################################
  # S6 Overlay build stage
  ##############################################################################

  s6-overlay:
    needs: scratch
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/base-s6
          echo "::set-output name=BUILD_CONTEXT::src/base-s6"
          echo "::set-output name=BUILD_NAME::shinsenter/s6-overlay"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.config.outputs.S6_VERSION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.S6_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64/v8
            linux/ppc64le
            linux/riscv64
            linux/s390x
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            S6_VERSION=${{ steps.config.outputs.S6_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
      -
        name: Update ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ${{ steps.config.outputs.BUILD_CONTEXT }}/README.md

  ##############################################################################
  # Base Ubuntu with S6 Overlay
  ##############################################################################

  ubuntu:
    needs: s6-overlay
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        base:
          - ubuntu
        version:
          - 22.04
          - 20.04
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/base-ubuntu
          echo "::set-output name=BUILD_CONTEXT::src/base-ubuntu"
          echo "::set-output name=BUILD_NAME::shinsenter/s6-ubuntu"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-ubuntu${{ matrix.version }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.version == steps.config.outputs.LATEST_OS }}
            type=raw,value=s6-${{ steps.config.outputs.S6_VERSION }},enable=${{ matrix.version == steps.config.outputs.LATEST_OS }}
            type=raw,value=${{ matrix.version }}
            type=raw,value=${{ matrix.version }}-s6-${{ steps.config.outputs.S6_VERSION }}
            type=raw,value=focal,enable=${{ matrix.version == '20.04' }}
            type=raw,value=focal-s6-${{ steps.config.outputs.S6_VERSION }},enable=${{ matrix.version == '20.04' }}
            type=raw,value=jammy,enable=${{ matrix.version == '22.04' }}
            type=raw,value=jammy-s6-${{ steps.config.outputs.S6_VERSION }},enable=${{ matrix.version == '22.04' }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ matrix.version }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64/v8
            linux/ppc64le
            linux/riscv64
            linux/s390x
          build-args: |
            BASE_OS_IMAGE=${{ matrix.base }}:${{ matrix.version }}
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            S6_VERSION=${{ steps.config.outputs.S6_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
      -
        name: Update ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ${{ steps.config.outputs.BUILD_CONTEXT }}/README.md

  ##############################################################################
  # Base PHP-CLI & PHP-FPM
  ##############################################################################

  php:
    needs: ubuntu
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/php/cli
          ./.bin/prebuild src/php/fpm
          echo "::set-output name=BUILD_CONTEXT_CLI::src/php/cli"
          echo "::set-output name=BUILD_CONTEXT_FPM::src/php/fpm"
          echo "::set-output name=BUILD_NAME::shinsenter/php"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-cli
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=cli,enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-cli
            type=raw,value=${{ matrix.version }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-fpm
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=fpm,enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-fpm
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ matrix.version }}-cli
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT_CLI }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT_CLI }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta-cli.outputs.tags }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ matrix.version }}-fpm
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT_FPM }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT_FPM }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta-fpm.outputs.tags }}

  ##############################################################################
  # Update README.md for main repo
  ##############################################################################

  readme:
    needs: ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          echo -e "\n\n$(cat ./SPONSOR.md)" >>./README.md
          echo "::set-output name=BUILD_DESC::$(sed '3q;d' ./README.md)"
      -
        name: Update README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: shinsenter/php
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ./README.md

  ##############################################################################
  # Base PHP Web Servers (Apache or Nginx)
  ##############################################################################

  php-servers:
    needs: php
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
        variation:
          - fpm-apache
          - fpm-nginx
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/servers/${{ matrix.variation }}
          echo "::set-output name=BUILD_CONTEXT::src/servers/${{ matrix.variation }}"
          echo "::set-output name=BUILD_NAME::shinsenter/php${{ matrix.variation }}"
          echo "::set-output name=BUILD_VERSION::php${{ matrix.version }}"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ matrix.variation }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-php
        uses: docker/metadata-action@v4
        with:
          images: shinsenter/php
          tags: |
            type=raw,value=${{ matrix.variation }},enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=${{ matrix.version }}-${{ matrix.variation }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta-server
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=${{ steps.config.outputs.BUILD_VERSION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: |
            ${{ steps.meta-php.outputs.tags }}
            ${{ steps.meta-server.outputs.tags }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: minify
        run: |
          tidy="${{ steps.config.outputs.BUILD_CONTEXT }}/Dockerfile.tidy"
          name="${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}"
          docker pull $name && touch $tidy && ./.bin/tidy-docker $tidy $name "${name}-tidy"
          if [ -f $tidy ]; then
            echo "::set-output name=BUILD_TIDY_FILE::${tidy}"
            echo "::set-output name=BUILD_TIDY_NAME::${name}-tidy"
          fi
      -
        if: steps.cache.outputs.cache-hit != 'true' && steps.minify.outputs.BUILD_TIDY_FILE != ''
        name: Minify ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          file: ${{ steps.minify.outputs.BUILD_TIDY_FILE }}
          tags: ${{ steps.minify.outputs.BUILD_TIDY_NAME }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
      -
        name: Update ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ${{ steps.config.outputs.BUILD_CONTEXT }}/README.md

  ##############################################################################
  # PHP-Based Popular Web Applications
  ##############################################################################

  php-webapps:
    needs: php-servers
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
        app:
          - cakephp4
          - codeigniter4
          - crater
          - flarum
          - fuelphp
          - grav
          - hyperf
          - kirby
          - laminas
          - laravel
          - phpmyadmin
          - slim
          - statamic
          - symfony
          - wordpress
          - yii
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v3
      -
        id: config
        run: |
          ./.bin/prebuild src/webapps/${{ matrix.app }}
          echo "::set-output name=BUILD_CONTEXT::src/webapps/${{ matrix.app }}"
          echo "::set-output name=BUILD_NAME::shinsenter/${{ matrix.app }}"
          echo "::set-output name=BUILD_VERSION::php${{ matrix.version }}"
      -
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.config.outputs.BUILD_CACHE_DIR }}
          key: ${{ runner.os }}-php${{ matrix.version }}-${{ matrix.app }}-${{ steps.config.outputs.CHECKSUM }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2
      -
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.config.outputs.BUILD_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ matrix.version == steps.config.outputs.LATEST_PHP }}
            type=raw,value=${{ steps.config.outputs.BUILD_VERSION }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        name: Build ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
          build-args: |
            BUILD_CONTEXT=${{ steps.config.outputs.BUILD_CONTEXT }}
            BUILD_DATE=${{ steps.config.outputs.BUILD_DATE }}
            BUILD_DESC=${{ steps.config.outputs.BUILD_DESC }}
            BUILD_NAME=${{ steps.config.outputs.BUILD_NAME }}
            BUILD_REVISION=${{ steps.config.outputs.BUILD_REVISION }}
            PHP_VERSION=${{ matrix.version }}
          tags: ${{ steps.meta.outputs.tags }}
      -
        if: steps.cache.outputs.cache-hit != 'true'
        id: minify
        run: |
          tidy="${{ steps.config.outputs.BUILD_CONTEXT }}/Dockerfile.tidy"
          name="${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}"
          docker pull $name && touch $tidy && ./.bin/tidy-docker $tidy $name "${name}-tidy"
          if [ -f $tidy ]; then
            echo "::set-output name=BUILD_TIDY_FILE::${tidy}"
            echo "::set-output name=BUILD_TIDY_NAME::${name}-tidy"
          fi
      -
        if: steps.cache.outputs.cache-hit != 'true' && steps.minify.outputs.BUILD_TIDY_FILE != ''
        name: Minify ${{ steps.config.outputs.BUILD_NAME }}:${{ steps.config.outputs.BUILD_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.ref_name == 'main' }}
          context: ${{ steps.config.outputs.BUILD_CONTEXT }}
          file: ${{ steps.minify.outputs.BUILD_TIDY_FILE }}
          tags: ${{ steps.minify.outputs.BUILD_TIDY_NAME }}
          platforms: ${{ steps.config.outputs.BUILD_PLATFORM }}
      -
        name: Update ${{ steps.config.outputs.BUILD_NAME }}/README.md
        uses: peter-evans/dockerhub-description@v3
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ steps.config.outputs.BUILD_NAME }}
          short-description: '${{ steps.config.outputs.BUILD_DESC }}'
          readme-filepath: ${{ steps.config.outputs.BUILD_CONTEXT }}/README.md

################################################################################
################################################################################
