#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################

config_file="$1"

if [ -z "$config_file" ]; then
    debug-echo -w "Usage: ${0##*/} /path/to/config.json <config/path>"
    exit 1
fi

if [ ! -f "$config_file" ]; then
    debug-echo -e "Error: Invalid config file: $config_file."
    exit 1
fi

set -e

shift
config_path="$@"

if [ -z "$config_path" ]; then
    config_path="config/"
fi

envsubst() {
    while IFS= read -r line; do
        while [[ $line =~ (\{\{ [a-zA-Z_][a-zA-Z_0-9]* \}\}) ]]; do
            var="${BASH_REMATCH[1]}"
            var_name="${var:3:-3}"
            var_value="${!var_name}"
            line="${line//$var/$var_value}"
        done
        echo "$line"
    done
}

if [[ $config_file == *".json" ]]; then
    output="/tmp/${config_file##*/}"
    echo "$(cat "$config_file" | envsubst)" >$output
    config_file="$output"
fi

RET=$(
    if is-debug; then cat $config_file; set -x; fi;
    curl --retry 3 --retry-delay 5 -sSL -w '%{http_code}' \
        -X PUT --data-binary @$config_file \
        --unix-socket ${UNIT_CONTROL_SOCKET:-/run/control.unit.sock} \
        "http://localhost/$config_path"
)
STATUS=$(echo $RET | tail -c 4)

if [ ! -z "$output" ]; then
    rm -f "$output"
fi

debug-echo "$RET."

if [ "$STATUS" != "200" ]; then
    debug-echo -e "Error: HTTP response status code is '$STATUS'."
    exit 1
fi

debug-echo -s "OK: HTTP response status code is '$STATUS'."
