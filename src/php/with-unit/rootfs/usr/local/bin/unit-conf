#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
unit_socket="${UNIT_CONTROL_SOCKET:-/run/control.unit.sock}"
default_config_path="config/"
tmpfile=""

cleanup() {
    [[ -n "$tmpfile" && -f "$tmpfile" ]] && rm -f "$tmpfile"
}
trap cleanup EXIT

config_file="${1:-}"
config_path="${2:-$default_config_path}"

if [[ -z "$config_file" ]]; then
    debug-echo -w "Usage: ${0##*/} /path/to/config.json [config/path]"
    exit 1
fi

if [[ ! -f "$config_file" ]]; then
    debug-echo -e "Error: Invalid config file: $config_file"
    exit 1
fi

envsubst_template() {
    while IFS= read -r line || [[ -n "$line" ]]; do
        while [[ "$line" =~ (\{\{[[:space:]]*([a-zA-Z_][a-zA-Z_0-9]*)[[:space:]]*\}\}) ]]; do
            full="${BASH_REMATCH[1]}"
            var="${BASH_REMATCH[2]}"
            val="${!var:-}"
            line="${line//$full/$val}"
        done
        echo "$line"
    done
}

if [[ "$config_file" == *.json ]]; then
    tmpfile="$(mktemp /tmp/unitconf.XXXXXX.json)"
    envsubst_template < "$config_file" > "$tmpfile"
    config_file="$tmpfile"
fi

debug-echo "Sending configuration to Unit at path: /$config_path"

if is-debug; then
    echo "---- Config Payload ----"
    cat "$config_file"
    echo "------------------------"
fi

http_body="$(mktemp)"
http_code=$(download -X PUT --data-binary @"$config_file" \
    --unix-socket "$unit_socket" \
    -w "%{http_code}" -o "$http_body" \
    "http://localhost/$config_path")

[[ "$(is-debug)" == "1" ]] && cat "$http_body"

if [[ "$http_code" != "200" ]]; then
    debug-echo -e "Error: HTTP response status code is '$http_code'."
    cat "$http_body"
    exit 1
else
    debug-echo -s "OK: HTTP response status code is '$http_code'."
fi
