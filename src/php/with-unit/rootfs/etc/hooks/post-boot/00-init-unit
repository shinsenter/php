#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################

UNIT_CONTROL_SOCKET="${UNIT_CONTROL_SOCKET:-/run/control.unit.sock}"
UNIT_CONTROL_PID="${UNIT_CONTROL_PID:-/run/unit.pid}"

set -e

if is-debug && has-cmd unitd-debug; then
    unitd="$(command -v unitd-debug)"
else
    unitd="$(command -v unitd)"
fi

if ! is-true $DISABLE_GREETING && [ -x $unitd ]; then
    $unitd --version 2>&1 | grep version
fi

configtest() {
    download -X GET --unix-socket "$UNIT_CONTROL_SOCKET" http://localhost/ || true
}

initial() {
    web-mkdir /var/lib/unit
    web-chown fix /var/lib/unit /var/log/unit /run/unit

    if [ -e /var/lib/unit/conf.json ]; then
        return 0
    fi

    # start daemon
    $unitd --control unix:$UNIT_CONTROL_SOCKET

    # wait for socket
    while [ ! -e "$UNIT_CONTROL_SOCKET" ]; do sleep 0.5; done
    configtest &>/dev/null

    # SSL bundle
    CERT_PATH="/etc/ssl/site/server_${PHP_POOL_NAME:-www}.pem"
    cat /etc/ssl/site/*.crt /etc/ssl/site/*.key >$CERT_PATH
    unit-conf $CERT_PATH "certificates/default"

    # enabled sites
    for json in $(find /etc/unit/sites-enabled -type f -name "*.json" | sort -dbfi); do
        unit-conf $json
    done

    # test config again
    if is-debug; then
        configtest >&2
    fi

    # stop Unit daemon after initial configuration
    kill -TERM $(cat $UNIT_CONTROL_PID) &>/dev/null || rm -f $UNIT_CONTROL_PID
    while [ -e "$UNIT_CONTROL_SOCKET" ]; do sleep 0.5; done
}

if is-debug; then
    debug-echo -w "🐞 Nginx Unit is in DEBUG MODE 🐞"
    initial || true
else
    initial &>/dev/null || true
fi
