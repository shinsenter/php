#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
if [ "$(id -u)" != "0" ]; then debug-echo -c "Please run this container as the root user!" >&2; exit 1; fi

debug-echo -d "Initialize container $DOCKER_NAME"

################################################################################

set -e

# set timezone
export TZ="${TZ:=UTC}"
if [ -n "$TZ" ] && [ -f "/usr/share/zoneinfo/$TZ" ]; then
    ln -nsf "/usr/share/zoneinfo/$TZ" /etc/localtime
    echo "$TZ" >/etc/timezone
fi

# fix ownership
ownership "${APP_GROUP:-www-data}" "${APP_GID:-}" "${APP_USER:-www-data}" "${APP_UID:-}"

# ensure application directory exist
web-mkdir "/var/www" "$(app-path)"
cd "$(app-path)"

################################################################################

hook pre-boot

################################################################################

# load the $ENV in ~/.bashrc
env_check='if [ -f "$ENV" ]; then source "$ENV"; fi'
bashrc=~/.bashrc
touch "$bashrc"
if ! grep -qF -- "$env_check" "$bashrc"; then
    tmp_file="$(mktemp)"
    {
        echo "# load environment variables"
        echo "$env_check"
        echo ""
        cat "$bashrc"
    } >"$tmp_file"
    mv -f "$tmp_file" "$bashrc"
fi

# export all env variables for PHP
if is-true "$ALLOW_RUNTIME_PHP_ENVVARS" && has-cmd php && has-cmd php-envvars; then
    debug-echo -d "Export all env variables for PHP."
    php-envvars export_envvars 2>&1
fi

################################################################################

# activity logging
touch /var/log/startup.log
echo "$(date) $(whoami)@$(hostname):$(pwd)\$ ${0##*/} $SUPERVISOR_PHP_COMMAND $@" >>/var/log/startup.log

################################################################################

# detect entrypoint
if [ -n "$SUPERVISOR_PHP_COMMAND" ]; then
    # run custom command defined in $SUPERVISOR_PHP_COMMAND
    debug-echo "Start container with custom user command: $SUPERVISOR_PHP_COMMAND $@"
else
    # fallback for docker-php-entrypoint
    if [ -x "/init" ]; then set -- /init "$@"; fi

    # fallback empty entrypoint
    if [ "$#" -eq 0 ]; then set -- /bin/sh; fi
fi

# run bootstrap hook to initialize the container
hook bootstrap $(! has-s6 && echo bootstrap-non-s6) post-boot onready

# start the container
exec with-env $SUPERVISOR_PHP_COMMAND "$@"

################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
################################################################################
