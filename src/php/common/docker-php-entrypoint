#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
if [ "$(id -u)" != "0" ]; then debug-echo -e "!!! Please run this container as the root user !!!" >&2; exit 1; fi

debug-echo "Initialize container"

################################################################################

# set timezone
export TZ="${TZ:=UTC}"
if [ -n "$TZ" ] && [ -e /usr/share/zoneinfo/$TZ ]; then
    ln -nsf /usr/share/zoneinfo/$TZ /etc/localtime
    echo $TZ >/etc/timezone
fi

# fix ownership
ownership "${APP_GROUP:-www-data}" "${APP_GID:-}" "${APP_USER:-www-data}" "${APP_UID:-}"

set -e

# ensure application directory exists
APP_PATH="$(app-path)"
debug-echo "Create $APP_PATH if not exists"
web-mkdir "$APP_PATH"

# change working directory
[ -d "$APP_PATH" ] && cd "$APP_PATH"

################################################################################

hook pre-boot

################################################################################

# load the $ENV in ~/.bashrc
ENV_CHECK='if [ -x "$ENV" ]; then source "$ENV"; fi'
touch ~/.bashrc
if ! grep -qF "$ENV_CHECK" ~/.bashrc; then echo "
# load environment variables for PHP
$ENV_CHECK
" >> ~/.bashrc; fi

# export all env variables for PHP
if is-true $ALLOW_RUNTIME_PHP_ENVVARS && has-cmd php && has-cmd php-envvars; then
    debug-echo "Export all env variables for PHP."
    php-envvars export_envvars 2>&1
fi

################################################################################

if [ -n "$SUPERVISOR_PHP_COMMAND" ]; then
    # run bootstrap hook to initialize the container
    hook bootstrap post-boot onready

    # run custom command defined in $SUPERVISOR_PHP_COMMAND
    debug-echo "Start container with custom user command: $SUPERVISOR_PHP_COMMAND $@"
    exec with-env $SUPERVISOR_PHP_COMMAND "$@"
else
    # fallback for docker-php-entrypoint
    if [ -x "/init" ]; then set -- /init "$@"; fi

    # fallback empty entrypoint
    if [ $# -eq 0 ]; then set -- /bin/sh; fi

    # run bootstrap hook to initialize the container
    if ! has-s6; then hook bootstrap bootstrap-non-s6 post-boot onready; fi

    # start container with command
    debug-echo "Start container with the command: $@"
    exec with-env "$@"
fi

################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
################################################################################
