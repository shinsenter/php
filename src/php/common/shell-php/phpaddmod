#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
if ! has-cmd php; then exit 1; fi
if ! has-cmd install-php-extensions; then exit 1; fi

# show usage if no arguments are passed
if [ $# -eq 0 ]; then
    debug-echo -i "Install and enable PHP modules."
    debug-echo -i "  Usage: ${0##*/} <module> [module] [...]" >&2
    debug-echo -l "  For example: ${0##*/} gd imagick" >&2
    exit 1
fi

INSTALLED_MODS="$(php -m 2>/dev/null | grep -v '^\[' | tr '[:upper:]' '[:lower:]')"

for module; do
    if [ ! -z "$module" ] && grep -q "\<$module\>" <<< "$INSTALLED_MODS"; then
        debug-echo -w "Module $module is already installed."
    else
        NEW_MODS="$NEW_MODS${NEW_MODS:+ }$module"
    fi
done

if [ -z "$NEW_MODS" ]; then
    exit 0
fi

if ! has-cmd gcc; then
    debug-echo -i "\nInstall build tools."
    APK_PACKAGES="tar xz" \
    APT_PACKAGES="xz-utils" \
    pkg-add $PHPIZE_DEPS curl
fi

if [ ! -e "/usr/src/php.tar.xz" ] && [ ! -z "$PHP_URL" ]; then
    debug-echo -i "\nDownload PHP source from $PHP_URL."
    curl --retry 3 --retry-delay 5 -ksL "$PHP_URL" -o /usr/src/php.tar.xz

    if [ ! -z "$PHP_ASC_URL" ]; then
        curl --retry 3 --retry-delay 5 -ksL "$PHP_ASC_URL" -o /usr/src/php.tar.xz.asc
    fi
fi

PID=/tmp/$(php -r 'echo md5(uniqid());' || echo "$0-temp")

set -o pipefail
debug-echo -i "\nInstall PHP modules: $NEW_MODS."

if is-debug; then env-default | grep IPE_ | debug-echo -i; fi

with-env install-php-extensions $NEW_MODS | while read -r line; do
    echo "$line"
    if [[ "$line" == *"only for installation"* ]]; then
        echo ${line##*:} | xargs echo -n >$PID
    fi
done | grep -vF StandWith | debug-echo -l

EXIT_CODE=$?

# clean up when failed
if [ $EXIT_CODE -ne 0 ] && [ -f $PID ]; then
    pkg-del $(cat $PID)
    rm -f $PID
fi

exit $EXIT_CODE
