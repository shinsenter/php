#!/usr/bin/env sh
##
# Source: https://gist.github.com/onnimonni/e7f2a5199d6dc719ffd32dc4d6ac1902
# This is a custom wrapper for msmtp to behave like sendmail.
# It supports PHP and cron, and configures external SMTP via ENV vars:
# SMTP_HOST, SMTP_PORT, SMTP_USER, SMTP_PASSWORD, SMTP_AUTH, SMTP_FROM, SMTP_LOG, SMTP_TLS
##

# if msmtp calls this wrapper with --passwordeval, return password
if [ -n "$SMTP_PASSWORD" ]; then
    parent_command="$(ps -o comm= "$PPID" 2>/dev/null)"
    case "$parent_command" in
        *msmtp*)
            printf '%s\n' "$SMTP_PASSWORD"
            exit 0
            ;;
    esac
fi

# start building msmtp options
options=""

# add -t if not already present
echo "$@" | grep -q -- '-t' || options="$options -t"

# set envelope from
echo "$@" | grep -q -- '-f' || {
    if [ -n "$SMTP_FROM" ]; then
        options="$options --from=$SMTP_FROM"
    else
        options="$options --read-envelope-from"
    fi
}

# TLS trust file (system default)
if [ -f /etc/ssl/certs/ca-certificates.crt ]; then
    options="$options --tls-trust-file=/etc/ssl/certs/ca-certificates.crt"
fi

# SMTP host is mandatory
if [ -n "$SMTP_HOST" ]; then
    options="$options --host=$SMTP_HOST"
else
    echo "[mail error] SMTP_HOST is not defined, mail can't be sent" >&2
    exit 1
fi

# logging
if [ -n "$SMTP_LOG" ]; then
    options="$options --logfile=$SMTP_LOG"
elif [ -f /var/log/mail.log ]; then
    options="$options --logfile=/var/log/mail.log"
fi

# optional settings
[ -n "$SMTP_PORT" ] && options="$options --port=$SMTP_PORT"
[ -n "$SMTP_USER" ] && options="$options --user=$SMTP_USER"

# passwordeval requires this script to output password when called by msmtp
if [ -n "$SMTP_PASSWORD" ]; then
    script_path="$(cd "$(dirname "$0")" && pwd)/$(basename "$0")"
    options="$options --passwordeval=$script_path"
fi

# auth toggle
if [ -n "$SMTP_AUTH" ]; then
    options="$options --auth=$SMTP_AUTH"
elif [ -n "$SMTP_USER" ] || [ -n "$SMTP_PASSWORD" ]; then
    options="$options --auth=on"
fi

[ -n "$SMTP_TLS" ] && options="$options --tls=$SMTP_TLS"

# finally, invoke msmtp with built options
exec msmtp $options "$@"
