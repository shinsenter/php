#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  SHIN Company <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################

# show usage if no arguments are passed
if [ $# -eq 0 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "help" ]; then
    debug-echo -i "Simple wrapper for adding s6-overlay services."
    debug-echo -i "  Usage: ${0##*/} [service-name] [longrun|oneshot|needs|finish|down|unset] [script file path|inline script]"
    debug-echo -l "  For example: ${0##*/} greeting oneshot \"echo 'hello world!'\""
    debug-echo -l "  For example: ${0##*/} apache longrun /path/to/apache/start.sh"
    debug-echo -l "  For example: ${0##*/} apache needs php-fpm"
    exit 1
fi

# s6-overlay service directory
s6="/etc/s6-overlay/s6-rc.d"
set -e

################################################################################

create() {
    local path="$1"
    local dir="$(dirname $path)"

    mkdir -p $dir && chmod 0755 $dir
    touch $path   && chmod ugo+x $path

    shift
    if [ -z "$@" ];  then set -- 'exec s6-svc -Od .'; fi
    if [ -f $path ]; then echo "$@" >| $path; fi
}

################################################################################

# get service type and name
name="$1"; shift
type="$1"; shift

# default type
if [ -z "$type" ]; then type="oneshot"; fi

# default name
if [ -z "$name" ]; then name="00-default"; fi

# get script contents from existing file
if [ -f "$@" ]; then set -- "$(cat $@)"; fi

################################################################################

# delete service
if [ "$type" = "unset" ] || [ "$type" = "delete" ]; then
    rm -rf "${s6}/${name}" "${s6}/user/contents.d/${name}" 2>/dev/null || true
    exit 0
fi

################################################################################

# add service dependencies
if [ "$type" = "depends" ] || [ "$type" = "needs" ]; then
    create "${s6}/${name}/dependencies.d/$1"
    exit $?
fi

################################################################################

# Generate S6 service files
# See: https://github.com/just-containers/s6-overlay#writing-a-service-script

debug-echo -w "Creating s6 service: ${name} (${type})."

if [ "$type" = "down" ] || [ "$type" = "finish" ]; then
    create "${s6}/${name}/${type}" "$@"
    exit $?
fi

if [ "$type" = "oneshot" ]; then
    create "${s6}/${name}/up" "exec ${s6}/${name}/run"
fi

create "${s6}/${name}/run" "$@"
create "${s6}/${name}/type" "$type"
create "${s6}/${name}/dependencies.d/base"
create "${s6}/user/contents.d/${name}"
