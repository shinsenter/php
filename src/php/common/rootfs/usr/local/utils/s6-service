#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  Mai Nhut Tan <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
# show usage if no arguments are passed
if [ "$#" -eq 0 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "help" ]; then
    debug-echo -i "Simple wrapper for adding s6-overlay services."
    debug-echo -i "  Usage: ${0##*/} [service-name] [longrun|oneshot|needs|finish|down|unset] [script file path|inline script]"
    debug-echo -l "  For example: ${0##*/} greeting oneshot \"echo 'hello world!'\""
    debug-echo -l "  For example: ${0##*/} apache longrun /path/to/apache/start.sh"
    debug-echo -l "  For example: ${0##*/} apache needs php-fpm"
    exit 1
fi

# s6-overlay service directory
s6="/etc/s6-overlay/s6-rc.d"

################################################################################
slugify() {
    echo "$1" | \
        tr '[:upper:]' '[:lower:]' | \
        sed -E 's/[^a-z0-9\.~]+/-/g' | \
        sed -E 's/^-+|-+$//g'
}

create() {
    local path="$1"
    local dir="$(dirname $path)"

    shift
    mkdir -p "$dir" && chmod 0755 $dir
    touch "$path"   && chmod ugo+x $path

    if [ -f "$path" ] && [ -n "$@" ]; then echo "$@" >| "$path"; fi
}

################################################################################
# default name
if [ -n "$1" ]; then
    name="$(slugify "$1")"; shift
else
    name="00-default"
fi

# default type
if [ -n "$1" ]; then
    type="$1"; shift
else
    type="oneshot"
fi

hook_name="s6-exit-${name//\~/}"

# get script contents from existing file
if [ -f "$1" ]; then set -- "$(cat $1)"; fi

################################################################################
# delete service
if [ "$type" = "unset" ] || [ "$type" = "delete" ]; then
    if [ -z "$1" ]; then
        \rm -rf "${s6}/${name}" "${s6}/user/contents.d/${name}" 2>/dev/null || true
    else
        \rm -f "${s6}/${name}/dependencies.d/$1" 2>/dev/null || true
    fi
    exit 0
fi

################################################################################
# add service dependencies
if [ "$type" = "requires" ] || [ "$type" = "needs" ]; then
    create "${s6}/${name}/dependencies.d/$1"
    exit $?
fi

# check dependencies
if [ "$type" = "exists" ] || [ "$type" = "depends" ]; then
    if [ "$#" -eq 0 ]; then
        [ -f "${s6}/${name}/run" ] && exit 0
    else
        for dep; do
            [ -f "${s6}/${name}/dependencies.d/${dep}" ] && exit 0
        done
    fi
    exit 1
fi

################################################################################
# Generate S6 service files
# See: https://github.com/just-containers/s6-overlay#writing-a-service-script

debug-echo -i "Creating s6 service: ${name} (${type})."

if [ "$type" = "down" ] || [ "$type" = "finish" ]; then
    create "${s6}/${name}/${type}" "$@"
    exit $?
fi

if [ "$type" = "oneshot" ]; then
    create "${s6}/${name}/up"   "exec ${s6}/${name}/run"
    create "${s6}/${name}/down" "exec hook $hook_name"
fi

if [ "$type" = "longrun" ]; then
    create "${s6}/${name}/finish" "#!/usr/bin/env sh
exec hook $hook_name"
fi

create "${s6}/${name}/type" "$type"
create "${s6}/${name}/run" "$@"
create "${s6}/${name}/dependencies.d/base"
create "${s6}/user/contents.d/${name}"
