#!/usr/bin/env sh
################################################################################
#     These setups are part of the project: https://code.shin.company/php
#     Please respect the intellectual effort that went into creating them.
#     If you use or copy these ideas, proper credit would be appreciated.
#      - Author:  Mai Nhut Tan <shin@shin.company>
#      - License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
# ownership [new_group] [new_gid] [new_user] [new_uid]
# Requires root; Debian/Ubuntu or Alpine with shadow

################################################################################
OLD_GROUP="${DEFAULT_GROUP:-www-data}"
OLD_USER="${DEFAULT_USER:-www-data}"
DEFAULT_SHELL="$(command -v nologin)"

# ensure group and user exist
if ! getent group "$OLD_GROUP" >/dev/null 2>&1; then
    groupadd "$OLD_GROUP"
fi

if ! id "$OLD_USER" >/dev/null 2>&1; then
    useradd -g "$OLD_GROUP" -M -s "$DEFAULT_SHELL" "$OLD_USER"
fi

# get old IDs
OLD_UID=$(id -u "$OLD_USER")
OLD_GID=$(id -g "$OLD_USER")

################################################################################
# get new IDs
NEW_GROUP="${1:-$OLD_GROUP}"
NEW_GID="${2:-$OLD_GID}"
NEW_USER="${3:-$OLD_USER}"
NEW_UID="${4:-$OLD_UID}"

# flags determine if any changes need to be made
CHANGE_GROUP=0
CHANGE_USER=0

################################################################################
# decide if group needs change or creation
if getent group "$NEW_GROUP" >/dev/null 2>&1; then
    debug-echo "Group $NEW_GROUP exists, skipping creation."
    PREV_GID="$(getent group "$NEW_GROUP" | cut -d: -f3)"
    if [ "$NEW_GID" -ne "$PREV_GID" ]; then
        CHANGE_GROUP=1
        groupmod -g "$NEW_GID" "$NEW_GROUP" \
            && debug-echo -s "Changed $NEW_GROUP GID: $PREV_GID → $NEW_GID"
    fi
else
    CHANGE_GROUP=1
    if [ "$NEW_GID" -ne "$OLD_GID" ]; then
        groupadd -g "$NEW_GID" "$NEW_GROUP"
    else
        groupadd "$NEW_GROUP"
    fi
    debug-echo -s "Created group $NEW_GROUP (GID=$(getent group "$NEW_GROUP" | cut -d: -f3))"
fi

# decide if user needs change or creation
if id "$NEW_USER" >/dev/null 2>&1; then
    debug-echo "User $NEW_USER exists, skipping creation."
    PREV_UID="$(id -u "$NEW_USER")"
    if [ "$NEW_GID" -ne "$PREV_UID" ]; then
        CHANGE_USER=1
        usermod -u "$NEW_UID" -g "$NEW_GID" "$NEW_USER" \
            && debug-echo -s "Changed $NEW_USER UID: $PREV_UID → $NEW_UID"
    fi
else
    CHANGE_USER=1
    # copy supplementary groups from original user
    SUPP=$(id -Gn "$OLD_USER" | tr ' ' ',')
    if [ "$NEW_UID" -ne "$OLD_UID" ]; then
        useradd -u "$NEW_UID" -g "$NEW_GROUP" -G "$SUPP" -M -s "$DEFAULT_SHELL" "$NEW_USER"
    else
        useradd -g "$NEW_GROUP" -G "$SUPP" -M -s "$DEFAULT_SHELL" "$NEW_USER"
    fi
    debug-echo -s "Created user $NEW_USER (UID=$(id -u "$NEW_USER")) with groups: $SUPP"
fi

# update ownership if any change
if [ "$CHANGE_GROUP" -eq 1 ] || [ "$CHANGE_USER" -eq 1 ]; then
    FINAL_UID=$(id -u "$NEW_USER")
    FINAL_GID=$(getent group "$NEW_GROUP" | cut -d: -f3)
    debug-echo -w "Updating file ownership: ${OLD_UID}:${OLD_GID} → ${FINAL_UID}:${FINAL_GID}"
    find / -xdev \( -uid "$OLD_UID" -o -gid "$OLD_GID" \) \
        -exec chown -h "$FINAL_UID":"$FINAL_GID" {} \; 2>/dev/null
fi

# set default values
env-default DEFAULT_GROUP "$NEW_GROUP"
env-default DEFAULT_USER  "$NEW_USER"
