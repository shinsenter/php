#!/usr/bin/env sh
################################################################################
# The setups in this file belong to the project https://code.shin.company/php
# I appreciate you respecting my intellectual efforts in creating them.
# If you intend to copy or use ideas from this project, please credit properly.
# Author:  SHIN Company <shin@shin.company>
# License: https://code.shin.company/php/blob/main/LICENSE
################################################################################
if ! has-cmd php; then exit 0; fi

APP_PATH="$(app-path)"
APP_ROOT="$(app-root)"
ENV_PATH="$APP_PATH/.env"
CONF_PATH="$APP_PATH/composer.json"

################################################################################

install_deps() {
    if [ -e "$CONF_PATH" ]; then
        cd "$APP_PATH"

        # intall git if needed
        if grep -qF '"git"' $CONF_PATH || is-true $COMPOSER_REQUIRES_GIT; then
            pkg-add git
            git config --global --add safe.directory "$APP_PATH"
        fi

        # intall nodejs if needed
        if grep -qF 'node ' $CONF_PATH || is-true $COMPOSER_REQUIRES_NODEJS; then
            pkg-add nodejs
        fi

        # intall npm if needed
        if grep -qF 'npm ' $CONF_PATH || is-true $COMPOSER_REQUIRES_NPM; then
            pkg-add npm
            if [ -f "./package.json" ]; then
                npm install || true
            fi
        fi
    fi
}

allow_plugins() {
    if [ -e "$CONF_PATH" ]; then
        composer config -n --no-plugins "allow-plugins.*/*" true
    fi
}

unset_allow_plugins() {
    if [ -e "$CONF_PATH" ]; then
        composer config -n --unset "allow-plugins.*/*"
    fi
}

copy_env() {
    local files=(
        '.env.dev'
        '.env.development.example'
        '.env.example'
        '.env.local'
        '.env.sample'
    )

    for file in "${files[@]}"; do
    if [ -f "$APP_PATH/$file" ]; then
        echo "Found: $file. Copying to .env..."
        cp -pf "$APP_PATH/$file" "$APP_PATH/.env"
        break
    fi
    done
}

################################################################################

web-mkdir "$APP_PATH" "$COMPOSER_HOME"
cd "$APP_PATH"

################################################################################

if [ -z "$(ls -A "$APP_PATH")" ]; then
    # pull project from source
    if ! is-true $DISABLE_AUTORUN_CREATING_PROJECT && [ ! -z "$INITIAL_PROJECT" ] && has-cmd composer; then
        hook pre-create-project

        case "$INITIAL_PROJECT" in
        http*.tar.gz)
            debug-echo "Downloading $INITIAL_PROJECT to $APP_PATH."
            curl --retry 3 --retry-delay 5 -kL "$INITIAL_PROJECT" | tar -xzv --strip-components=1 -C "$APP_PATH"
            ;;
        http*.zip)
            debug-echo "Downloading $INITIAL_PROJECT to $APP_PATH."
            filename="/tmp/${INITIAL_PROJECT##*/}"
            temp="/tmp/$(php -r 'echo uniqid();')"
            rm -rf "$temp" && mkdir -p "$temp"
            curl -o "$filename" --retry 3 --retry-delay 5 -kL "$INITIAL_PROJECT"
            unzip "$filename" -d "$temp"
            if [ "$(ls -1 "$temp" | wc -l)" == "1" ]; then
                temp="$temp/$(ls -1 "$temp")"
            fi
            if [ -d "$temp" ]; then
                cp -rpn "$temp"/. "$APP_PATH"/ &>/dev/null
            else
                cp -pn "$temp" "$APP_PATH"/ &>/dev/null
            fi
            ;;
        */*)
            debug-echo "Installing project $INITIAL_PROJECT to $APP_PATH."
            composer create-project $COMPOSER_CREATE_OPTIONS \
                -n --no-secure-http --no-install --no-scripts \
                -- "$INITIAL_PROJECT" "$APP_PATH"
            ;;
        *)
            hook create-project
            ;;
        esac

        if [ -e "$CONF_PATH" ] && grep -qF '"post-root-package-install"' $CONF_PATH; then
            composer run post-root-package-install
            hook post-root-package-install
        fi

        hook post-create-project
        web-chown "Project created in $APP_PATH."
    fi

    # copy from source directory if it is not empty
    if ! is-true $DISABLE_AUTORUN_COPYING_SOURCE && [ -d /source/ ]; then
        debug-echo "Copying files from /source/ to $APP_PATH."

        cp -rpn /source/. "$APP_PATH"/ &>/dev/null
        web-chown "Copied files from /source/ to $APP_PATH"
    fi

    # install required packages, allow composer plugins
    install_deps
    allow_plugins

    # copy .env.example to .env
    copy_env

    # update packages if the project has composer.json
    if [ -e "$CONF_PATH" ]; then
        debug-echo "Updating required packages in $APP_PATH."

        hook pre-update-packages
        composer update -n -W $COMPOSER_UPDATE_OPTIONS
        hook post-update-packages

        web-chown "Required packages in $APP_PATH were updated."
    fi

    # run post-create-project-cmd if composer.json has it
    if [ -e "$CONF_PATH" ] && grep -qF '"post-create-project-cmd"' $CONF_PATH; then
        composer run post-create-project-cmd
        hook post-create-project-cmd
    fi

    # unset allow composer plugins
    unset_allow_plugins
else
    debug-echo "Skip project creation because $APP_PATH is not empty."
fi

################################################################################

# run composer install when vendor directory or ClassLoader.php is missing
if ! is-true $DISABLE_AUTORUN_COMPOSER_INSTALL && has-cmd composer; then
    if [ -e "$CONF_PATH" ]; then
        vendor_dir="$APP_PATH/$(composer config vendor-dir 2>/dev/null)"
        if [ ! -d "$vendor_dir" ] || [ ! -e "$vendor_dir/composer/ClassLoader.php" ]; then
            # install required packages, allow composer plugins
            install_deps
            allow_plugins

            # copy .env.example to .env
            copy_env

            # install composer packages
            hook pre-install-packages
            composer install -n $COMPOSER_INSTALL_OPTIONS
            hook post-install-packages

            # unset allow composer plugins
            unset_allow_plugins

            web-chown "Composer packages were installed in $APP_PATH"
        fi
    else
        debug-echo "Skip composer install because $CONF_PATH is missing."
    fi
fi

################################################################################
